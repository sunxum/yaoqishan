<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--<util:properties id="config" location="classpath:db.properties"/>-->

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>

    <!-- 配置数据库连接参数及连接池 -->
    <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>

        <!--initialSize: 初始化连接-->
        <property name="initialSize" value="1"/>
        <!--minIdle: 最小空闲连接-->
        <property name="minIdle" value="3"/>
        <!--maxIdle: 最大空闲连接-->
        <property name="maxIdle" value="8"/>
        <!-- 连接池中可同时连接的最大的连接数 -->
        <property name="maxActive" value="20"/>
        <!-- 最大等待时间，当没有可用连接时，连接池等待连接释放的最大时间，超过该时间限制会抛出异常 -->
        <property name="maxWait" value="60000"/>
        <!-- 超过removeAbandonedTimeout时间后，是否进 行没用连接（废弃）的回收 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 超过时间限制，回收没有用(废弃)的连接 -->
        <property name="removeAbandonedTimeout" value="180"/>
        <!-- 每60秒运行一次空闲连接回收器  -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
    </bean>

    <!-- spring集成mybatis，不再需要mybatis的配置文件 -->
    <!-- 配置SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds"/>
        <property name="mapperLocations" value="classpath:mybatis/*.xml"/>
        <!-- 分页插件pageHelper -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
        <constructor-arg index="1" value="SIMPLE"/>
    </bean>

    <!-- 该bean负责调用SqlSession的getMapper函数 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="cn.javaex.yaoqishan.dao"/>
    </bean>

    <!-- 开启事务注解驱动 -->
    <tx:annotation-driven/>

    <!-- (事务管理) -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ds"/>
    </bean>
</beans>